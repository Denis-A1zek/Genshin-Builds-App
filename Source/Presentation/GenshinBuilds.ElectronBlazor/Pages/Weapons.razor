@page "/weapons"
@using GenshinBuilds.Application;
@using GenshinBuilds.Application.Common.Models;
@using GenshinBuilds.Application.Services.Implementation;
@using GenshinBuilds.Application.Services.Interfaces;
@using GenshinBuilds.Domain;
@using GenshinBuilds.Domain.Interfaces;
@using GenshinBuilds.Domain.Models;
@using GenshinBuilds.ElectronBlazor.Common.Comparer;

@inject IUnitOfWork _unitOfWork;
@inject IWeaponInformationService _weaponService;

<div class="flex-container">

    <div>
        <h3>Список оружия</h3>
    </div>
    <div>
        <WeaponTypeFilter TEntity="MinimalWeapon" Source="Weapon" @bind-ListTypesOfWeapon="FiltredWeapons"></WeaponTypeFilter>      
    </div>

    @if (!_isBusy && FiltredWeapons.Count != 0)
    {
        <div class="flex-weapon-container">
            @foreach (var weapon in FiltredWeapons)
            {
                <div class="flex-weapon">
                    <WeaponCard Weapon="weapon"></WeaponCard>
                </div>
            }
        </div>
    }
    else
    {
        <div class="flex-weapon-container-empty">
            <EmptyList></EmptyList>
        </div>
    }

</div>

@code {
    private bool _isBusy = true;
    public List<MinimalWeapon> Weapon { get; set; } = new();
    public List<MinimalWeapon> FiltredWeapons { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        _isBusy = true;
        var weapons = await _weaponService.GetAllMinimalWeaponInfo();
        
        if (weapons is null) return;

        Weapon = weapons.ToList();

        FiltredWeapons = Weapon;
        FiltredWeapons.Sort(new RarityComparer<MinimalWeapon>());


        _isBusy = false;
        await base.OnInitializedAsync();
    }
}
